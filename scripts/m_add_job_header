#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""add job control headers to script for running on an HPC"""
from pathlib import Path
from argparse import ArgumentParser, RawDescriptionHelpFormatter
from mushroom.core.hpc import add_scheduler_header, current_platform, current_use_pbs

def _parser():
    """the argument parser"""
    p = ArgumentParser(description=__doc__, formatter_class=RawDescriptionHelpFormatter)
    p.add_argument("script_path", type=str, help="path to the script to add header")
    p.add_argument("-J", dest='jobname', default=None, type=str, help="use PBS headers")
    p.add_argument("-N", dest='nnodes', default=1, type=int, help="number of nodes")
    p.add_argument("-n", dest='ntasks', default=None, type=int, help="number of tasks")
    p.add_argument("-p", dest='platform', default=None, type=str, help="manually specify platform")
    p.add_argument("--use-pbs", dest='use_pbs', action="store_true", help="use PBS headers")
    return p

def m_add_job_header():
    """main stream"""
    args = _parser().parse_args()
    pscript = Path(args.script_path)
    if not pscript.is_file():
        raise FileNotFoundError("script {} is not found".format(pscript))
    use_pbs = args.use_pbs
    platform = args.platform
    if platform is None:
        platform = current_platform
        use_pbs = current_use_pbs
    try:
        add_scheduler_header(pscript, platform, use_pbs=use_pbs)
    except ValueError as err:
        raise ValueError from err

if __name__ == "__main__":
    m_add_job_header()

